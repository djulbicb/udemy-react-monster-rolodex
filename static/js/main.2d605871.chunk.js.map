{"version":3,"sources":["logo.svg","components/Card.component.js","components/Test.js","components/CardList.component.js","components/SearchBar.component.js","components/EventButtons.component.js","App.js","reportWebVitals.js","index.js"],"names":["Card","React","Component","props","monster","className","src","id","name","email","CardList","children","monsters","map","SearchBar","placeholder","handleChange","type","onChange","EventButtons","handleClick3","console","log","handleClick2","bind","this","onClick","handleClick1","App","state","searchVal","fetch","then","response","json","users","setState","filteredMonsters","filter","toLowerCase","includes","e","target","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAAe,I,YCcAA,GCbIC,IAAMC,UDCZ,SAACC,GACV,IAAMC,EAAUD,EAAMC,QAEtB,OACI,sBAAKC,UAAU,OAAf,UACI,qBAAKC,IAAG,gCAA2BF,EAAQG,GAAnC,eACR,+BAAKH,EAAQG,GAAb,IAAkBH,EAAQI,QAC1B,4BAAIJ,EAAQK,aEaTC,G,KAnBE,SAACP,GAEd,OACI,qCAEQA,EAAMQ,SAEV,qBAAKN,UAAU,YAAf,SAGQF,EAAMS,SAASC,KAAI,SAAAT,GAAO,OACtB,cAAC,EAAD,CAAwBA,QAASA,GAAtBA,EAAQG,cCJ5BO,EAPG,SAACX,GACf,MAAgDA,EAAzCY,mBAAP,MAAmB,YAAnB,EAAgCC,EAAgBb,EAAhBa,aAChC,OACI,uBAAOX,UAAU,eAAeY,KAAK,SAASF,YAAaA,EAAaG,SAAUF,K,OC2B3EG,E,kDA5BX,WAAahB,GAAQ,IAAD,8BAChB,cAAMA,IAWViB,aAAe,WACXC,QAAQC,IAAI,YAAZ,iBAVA,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBAHJ,E,gDAMpB,WACIH,QAAQC,IAAI,YAAaG,Q,0BAE7B,WACIJ,QAAQC,IAAI,YAAaG,Q,oBAM7B,WACI,OACI,gCACI,wBAAQC,QAASD,KAAKE,eAAtB,2EACA,wBAAQD,QAASD,KAAKE,aAAtB,2DACA,wBAAQD,QAASD,KAAKF,aAAtB,wCACA,wBAAQG,QAASD,KAAKL,aAAtB,wD,GAxBWnB,IAAMC,WC4ClB0B,E,kDArCb,WAAazB,GAAQ,IAAD,8BAClB,cAAMA,IAED0B,MAAQ,CACXjB,SAAU,GACVkB,UAAY,IALI,E,qDASpB,WAAqB,IAAD,OAClBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GACJ,EAAKC,SAAS,CACZxB,SAAUuB,IACT,WACDd,QAAQC,IAAI,wC,oBAKlB,WAAW,IAAD,OACR,EAA8BG,KAAKI,MAA5BjB,EAAP,EAAOA,SAAUkB,EAAjB,EAAiBA,UACXO,EAAmBzB,EAAS0B,QAAO,SAAAlC,GAAO,OAAIA,EAAQI,KAAK+B,cAAcC,SAASV,EAAUS,kBAClG,OACE,sBAAKlC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAWU,YAAY,uBAAuBC,aAAc,SAAAyB,GAAI,EAAKL,SAAS,CAACN,UAAWW,EAAEC,OAAOC,WACnG,uBACA,cAAC,EAAD,CAAU/B,SAAUyB,EAAkBhC,UAAU,YAAhD,SACE,0D,GAhCSJ,IAAMC,WCIV0C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.2d605871.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\n\r\nconst Card = (props) => {\r\n    const monster = props.monster;\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <img src={`https://robohash.org/>${monster.id}?set=set2`}></img>\r\n            <h2>{monster.id} {monster.name}</h2>\r\n            <p>{monster.email}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;\r\n\r\n","import React, {Component} from 'react';\r\nclass Test extends React.Component {\r\n\r\n\r\n\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            test : [\r\n                {\r\n                    name : \"Bojan\",\r\n                    age: 32\r\n                }\r\n            ],\r\n            monsters : []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n        .then(response => response.json())\r\n        .then(users => this.setState({monsters: users}))\r\n    }\r\n\r\n    \r\n\r\n     render () {\r\n        return (\r\n            <>\r\n                <p>\r\n                    Username: {this.state.name}\r\n                </p>\r\n                <button onClick={()=> {this.setState({\r\n                    name: \"Other name\"\r\n                })}}>Change name {4+56}</button>\r\n\r\n                {\r\n                    this.state.monsters.map(monster => (\r\n                        <div>{monster.name}</div>\r\n                    ))\r\n                }\r\n            </>\r\n        )\r\n     }\r\n}\r\n\r\nexport default Test;","import React from 'react';\r\nimport Card from './Card.component';\r\nimport './cards.styles.css';\r\nconst CardList = (props) => {\r\n\r\n    return (\r\n        <>\r\n            {\r\n                props.children\r\n            }\r\n            <div className=\"card-list\">\r\n                \r\n                {\r\n                    props.monsters.map(monster => (\r\n                        <Card key={monster.id}  monster={monster}></Card>\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\nimport './cards.styles.css';\r\n\r\nconst SearchBar = (props) => {\r\n    const {placeholder=\"Type here\", handleChange} = props;\r\n    return (\r\n        <input className=\"search-field\" type=\"search\" placeholder={placeholder} onChange={handleChange}></input>\r\n    )\r\n}\r\n\r\nexport default SearchBar;\r\n\r\n\r\n","import React from 'react';\r\nimport './cards.styles.css';\r\n\r\nclass EventButtons extends React.Component {\r\n\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.handleClick2 = this.handleClick2.bind(this);\r\n    }\r\n\r\n    handleClick1 () {\r\n        console.log(\"Button 01\", this);\r\n    }\r\n    handleClick2 () {\r\n        console.log(\"Button 02\", this);\r\n    }\r\n    handleClick3 = () => {\r\n        console.log(\"Button 03\", this);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div>\r\n                <button onClick={this.handleClick1()}>Button 1 - Izvrsi se svaki put kad se renderuje. This postoji</button>\r\n                <button onClick={this.handleClick1}>Button 2 - Izvrsi se na klik. This ne postoji</button>\r\n                <button onClick={this.handleClick2}>Button 3 - Radi zbog binda</button>\r\n                <button onClick={this.handleClick3}>Button 4 - Radi zbog arrow funkcije</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EventButtons;","import logo from './logo.svg';\nimport './App.css';\nimport Test from './components/Test';\nimport CardList from './components/CardList.component';\nimport React from 'react';\nimport SearchBar from './components/SearchBar.component';\nimport EventButtons from './components/EventButtons.component';\n\nclass App  extends React.Component {\n\n  constructor (props) {\n    super(props);\n\n    this.state = {\n      monsters: [],\n      searchVal : \"\"\n    }\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n    .then(response=>response.json())\n    .then(users => {\n      this.setState({\n        monsters: users\n      }, ()=> {\n        console.log(\"Callback kad se state izvrsi\")\n      })\n    })\n  }\n\n  render () {\n    const {monsters, searchVal} = this.state;\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchVal.toLowerCase()));\n    return (\n      <div className=\"App\">\n        <EventButtons></EventButtons>\n        <SearchBar placeholder=\"Call me a monster!!!\" handleChange={e=>{this.setState({searchVal: e.target.value})}}></SearchBar>\n        <hr></hr>\n        <CardList monsters={filteredMonsters} className=\"card-list\">\n          <h1>Monster Rolodex</h1>\n        </CardList>\n      </div>\n    )\n  }\n}\n\nexport default App;\n\n\n//https://jsonplaceholder.typicode.com/users\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}